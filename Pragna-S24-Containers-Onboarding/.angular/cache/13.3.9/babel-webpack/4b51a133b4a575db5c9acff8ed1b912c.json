{"ast":null,"code":"import { select } from '@ngrx/store';\nimport * as fromAuth from '../../core/store/auth/auth.reducer';\nimport { PageAnimations } from './page.animations';\nimport { filter, withLatestFrom, takeUntil } from 'rxjs/operators';\nimport { Subject, combineLatest } from 'rxjs';\nimport { LongTermGoalActionTypes, UpdateLongTermGoal } from '../../core/store/long-term-goal/long-term-goal.actions';\nimport { LoadData, Cleanup } from './+state/page.actions';\nimport { ActionFlow } from '../../core/store/app.actions';\nimport { ModalComponent } from './modal/modal.component';\nimport { ShowSnackbar } from '../../core/snackbar/snackbar.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./+state/page.selectors\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"../../core/firebase/firebase.service\";\nimport * as i5 from \"../../core/store/app.selectors\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"./widget/widget.component\";\nimport * as i8 from \"@angular/common\";\nexport class PageComponent {\n  constructor(route, selectors, store, db, slRx, dialog) {\n    // console.log(\"JSHDJDJ\");\n    // this.rest$.pipe(\n    //   takeUntil(this.unsubscribe$),\n    //  ).subscribe((hi) => {\n    //   console.log(hi);\n    // });\n    // console.log(\"---------\");\n    // console.log(this.longTermData$);\n    // this.longTermData$.pipe(\n    //   takeUntil(this.unsubscribe$),\n    //  ).subscribe((bi) => {\n    //   console.log(bi);\n    // });\n    this.route = route;\n    this.selectors = selectors;\n    this.store = store;\n    this.db = db;\n    this.slRx = slRx;\n    this.dialog = dialog; // --------------- ROUTE PARAMS & CURRENT USER ---------\n\n    this.currentUser$ = this.store.pipe(select(fromAuth.selectUser), filter(user => user !== null)); // --------------- DB ENTITY DATA ----------------------\n\n    /** Container id for selectors and loading. */\n\n    this.containerId = this.db.createId(); // --------------- DATA BINDING ------------------------\n\n    this.longTermData$ = this.selectors.selectLongTermData(this.currentUser$, this.containerId);\n    this.rest$ = this.selectors.usered(this.currentUser$); // --------------- EVENT BINDING -----------------------\n\n    this.openEditModal$ = new Subject();\n    this.saveGoals$ = new Subject(); // --------------- HELPER FUNCTIONS AND OTHER ----------\n\n    /** Unsubscribe observable for subscriptions. */\n\n    this.unsubscribe$ = new Subject();\n  }\n\n  ngOnInit() {\n    // --------------- EVENT HANDLING ----------------------\n    //Handle openEditModal events\n    // this.openEditModal$.pipe(\n    //   withLatestFrom(this.longTermData$),\n    //   takeUntil(this.unsubscribe$),\n    // ).subscribe(([_, longTermData]) => {\n    //   console.log(\"in open edit modal\");\n    // });\n    this.openEditModal$.pipe(withLatestFrom(this.longTermData$), takeUntil(this.unsubscribe$)).subscribe(([_, longTermData]) => {\n      this.dialogRef = this.dialog.open(ModalComponent, {\n        height: '366px',\n        width: '100%',\n        maxWidth: '500px',\n        data: {\n          longTermData: longTermData,\n          updateGoals: (goals, loading$) => {\n            this.saveGoals$.next({\n              goals,\n              loading$\n            });\n          }\n        },\n        panelClass: 'dialog-container'\n      });\n    });\n    /** Handle save goals events. */\n\n    this.saveGoals$.pipe(takeUntil(this.unsubscribe$)).subscribe(({\n      goals,\n      loading$\n    }) => {\n      const actionSets = goals.map(g => {\n        // Define the action sets we'd like to dispatch\n        return {\n          action: new UpdateLongTermGoal(g.__id, {\n            oneYear: g.oneYear,\n            fiveYear: g.fiveYear\n          }, this.containerId),\n          responseActionTypes: {\n            success: LongTermGoalActionTypes.UPDATE_SUCCESS,\n            failure: LongTermGoalActionTypes.UPDATE_FAIL\n          }\n        };\n      }); // Dispatch an Action Flow with those actionSets\n      // as well as the loading$, successActionFn, and failActionFn\n\n      this.store.dispatch(new ActionFlow({\n        actionSets,\n        loading$,\n        successActionFn: actionSetResponses => {\n          this.dialogRef.close();\n          return [new ShowSnackbar({\n            message: 'Updated longterm goals',\n            config: {\n              duration: 3000\n            }\n          })];\n        },\n        failActionFn: actionSetResponses => {\n          this.dialogRef.close();\n          return [new ShowSnackbar({\n            message: 'Failed to update quarter goals',\n            config: {\n              duration: 3000\n            }\n          })];\n        }\n      }));\n    }); // --------------- LOAD DATA ---------------------------\n    // Once everything is set up, load the data for the role.\n\n    combineLatest(this.currentUser$).pipe(takeUntil(this.unsubscribe$)).subscribe(([currentUser]) => {\n      this.store.dispatch(new LoadData({\n        currentUser\n      }, this.containerId));\n    });\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe subscriptions.\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete(); // Unsubscribe from firebase connection from load and free up memoized selector values.\n\n    this.store.dispatch(new Cleanup(this.containerId));\n    this.selectors.cleanup(this.containerId);\n  }\n\n}\n\nPageComponent.ɵfac = function PageComponent_Factory(t) {\n  return new (t || PageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PageSelectors), i0.ɵɵdirectiveInject(i3.Store), i0.ɵɵdirectiveInject(i4.FirebaseService), i0.ɵɵdirectiveInject(i5.EntitySelectorService), i0.ɵɵdirectiveInject(i6.MatDialog));\n};\n\nPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PageComponent,\n  selectors: [[\"app-page\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"page-container\"], [3, \"goal\", \"editGoals\"]],\n  template: function PageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-widget\", 1);\n      i0.ɵɵlistener(\"editGoals\", function PageComponent_Template_app_widget_editGoals_1_listener() {\n        return ctx.openEditModal$.next();\n      });\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"goal\", i0.ɵɵpipeBind1(2, 1, ctx.longTermGoal$));\n    }\n  },\n  directives: [i7.WidgetComponent],\n  pipes: [i8.AsyncPipe],\n  styles: [\".page-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  background-color: #ecedff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFDRiIsImZpbGUiOiJwYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNiwgMjM3LCAyNTUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbiJdfQ== */\"],\n  data: {\n    animation: PageAnimations\n  },\n  changeDetection: 0\n});","map":{"version":3,"sources":["/Users/pragna/Tech4Good/Web-Dev/containers-onboarding/longtermgoals-setup-uosnjl/src/app/main/page/page.component.ts"],"names":["select","fromAuth","PageAnimations","filter","withLatestFrom","takeUntil","Subject","combineLatest","LongTermGoalActionTypes","UpdateLongTermGoal","LoadData","Cleanup","ActionFlow","ModalComponent","ShowSnackbar","i0","i1","i2","i3","i4","i5","i6","i7","i8","PageComponent","constructor","route","selectors","store","db","slRx","dialog","currentUser$","pipe","selectUser","user","containerId","createId","longTermData$","selectLongTermData","rest$","usered","openEditModal$","saveGoals$","unsubscribe$","ngOnInit","subscribe","_","longTermData","dialogRef","open","height","width","maxWidth","data","updateGoals","goals","loading$","next","panelClass","actionSets","map","g","action","__id","oneYear","fiveYear","responseActionTypes","success","UPDATE_SUCCESS","failure","UPDATE_FAIL","dispatch","successActionFn","actionSetResponses","close","message","config","duration","failActionFn","currentUser","ngOnDestroy","complete","cleanup","ɵfac","PageComponent_Factory","t","ɵɵdirectiveInject","ActivatedRoute","PageSelectors","Store","FirebaseService","EntitySelectorService","MatDialog","ɵcmp","ɵɵdefineComponent","type","decls","vars","consts","template","PageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PageComponent_Template_app_widget_editGoals_1_listener","ɵɵpipe","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","longTermGoal$","directives","WidgetComponent","pipes","AsyncPipe","styles","animation","changeDetection"],"mappings":"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","sourcesContent":["import { select } from '@ngrx/store';\nimport * as fromAuth from '../../core/store/auth/auth.reducer';\nimport { PageAnimations } from './page.animations';\nimport { filter, withLatestFrom, takeUntil } from 'rxjs/operators';\nimport { Subject, combineLatest } from 'rxjs';\nimport { LongTermGoalActionTypes, UpdateLongTermGoal } from '../../core/store/long-term-goal/long-term-goal.actions';\nimport { LoadData, Cleanup } from './+state/page.actions';\nimport { ActionFlow } from '../../core/store/app.actions';\nimport { ModalComponent } from './modal/modal.component';\nimport { ShowSnackbar } from '../../core/snackbar/snackbar.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./+state/page.selectors\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"../../core/firebase/firebase.service\";\nimport * as i5 from \"../../core/store/app.selectors\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"./widget/widget.component\";\nimport * as i8 from \"@angular/common\";\nexport class PageComponent {\n    constructor(route, selectors, store, db, slRx, dialog) {\n        // console.log(\"JSHDJDJ\");\n        // this.rest$.pipe(\n        //   takeUntil(this.unsubscribe$),\n        //  ).subscribe((hi) => {\n        //   console.log(hi);\n        // });\n        // console.log(\"---------\");\n        // console.log(this.longTermData$);\n        // this.longTermData$.pipe(\n        //   takeUntil(this.unsubscribe$),\n        //  ).subscribe((bi) => {\n        //   console.log(bi);\n        // });\n        this.route = route;\n        this.selectors = selectors;\n        this.store = store;\n        this.db = db;\n        this.slRx = slRx;\n        this.dialog = dialog;\n        // --------------- ROUTE PARAMS & CURRENT USER ---------\n        this.currentUser$ = this.store.pipe(select(fromAuth.selectUser), filter((user) => user !== null));\n        // --------------- DB ENTITY DATA ----------------------\n        /** Container id for selectors and loading. */\n        this.containerId = this.db.createId();\n        // --------------- DATA BINDING ------------------------\n        this.longTermData$ = this.selectors.selectLongTermData(this.currentUser$, this.containerId);\n        this.rest$ = this.selectors.usered(this.currentUser$);\n        // --------------- EVENT BINDING -----------------------\n        this.openEditModal$ = new Subject();\n        this.saveGoals$ = new Subject();\n        // --------------- HELPER FUNCTIONS AND OTHER ----------\n        /** Unsubscribe observable for subscriptions. */\n        this.unsubscribe$ = new Subject();\n    }\n    ngOnInit() {\n        // --------------- EVENT HANDLING ----------------------\n        //Handle openEditModal events\n        // this.openEditModal$.pipe(\n        //   withLatestFrom(this.longTermData$),\n        //   takeUntil(this.unsubscribe$),\n        // ).subscribe(([_, longTermData]) => {\n        //   console.log(\"in open edit modal\");\n        // });\n        this.openEditModal$.pipe(withLatestFrom(this.longTermData$), takeUntil(this.unsubscribe$)).subscribe(([_, longTermData]) => {\n            this.dialogRef = this.dialog.open(ModalComponent, {\n                height: '366px',\n                width: '100%',\n                maxWidth: '500px',\n                data: {\n                    longTermData: longTermData,\n                    updateGoals: (goals, loading$) => {\n                        this.saveGoals$.next({ goals, loading$ });\n                    },\n                },\n                panelClass: 'dialog-container',\n            });\n        });\n        /** Handle save goals events. */\n        this.saveGoals$.pipe(takeUntil(this.unsubscribe$)).subscribe(({ goals, loading$ }) => {\n            const actionSets = goals.map((g) => {\n                // Define the action sets we'd like to dispatch\n                return {\n                    action: new UpdateLongTermGoal(g.__id, {\n                        oneYear: g.oneYear,\n                        fiveYear: g.fiveYear,\n                    }, this.containerId),\n                    responseActionTypes: {\n                        success: LongTermGoalActionTypes.UPDATE_SUCCESS,\n                        failure: LongTermGoalActionTypes.UPDATE_FAIL,\n                    },\n                };\n            });\n            // Dispatch an Action Flow with those actionSets\n            // as well as the loading$, successActionFn, and failActionFn\n            this.store.dispatch(new ActionFlow({\n                actionSets,\n                loading$,\n                successActionFn: (actionSetResponses) => {\n                    this.dialogRef.close();\n                    return [\n                        new ShowSnackbar({\n                            message: 'Updated longterm goals',\n                            config: { duration: 3000 },\n                        })\n                    ];\n                },\n                failActionFn: (actionSetResponses) => {\n                    this.dialogRef.close();\n                    return [\n                        new ShowSnackbar({\n                            message: 'Failed to update quarter goals',\n                            config: { duration: 3000 },\n                        }),\n                    ];\n                },\n            }));\n        });\n        // --------------- LOAD DATA ---------------------------\n        // Once everything is set up, load the data for the role.\n        combineLatest(this.currentUser$).pipe(takeUntil(this.unsubscribe$)).subscribe(([currentUser]) => {\n            this.store.dispatch(new LoadData({\n                currentUser,\n            }, this.containerId));\n        });\n    }\n    ngOnDestroy() {\n        // Unsubscribe subscriptions.\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n        // Unsubscribe from firebase connection from load and free up memoized selector values.\n        this.store.dispatch(new Cleanup(this.containerId));\n        this.selectors.cleanup(this.containerId);\n    }\n}\nPageComponent.ɵfac = function PageComponent_Factory(t) { return new (t || PageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PageSelectors), i0.ɵɵdirectiveInject(i3.Store), i0.ɵɵdirectiveInject(i4.FirebaseService), i0.ɵɵdirectiveInject(i5.EntitySelectorService), i0.ɵɵdirectiveInject(i6.MatDialog)); };\nPageComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PageComponent, selectors: [[\"app-page\"]], decls: 3, vars: 3, consts: [[1, \"page-container\"], [3, \"goal\", \"editGoals\"]], template: function PageComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-widget\", 1);\n        i0.ɵɵlistener(\"editGoals\", function PageComponent_Template_app_widget_editGoals_1_listener() { return ctx.openEditModal$.next(); });\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"goal\", i0.ɵɵpipeBind1(2, 1, ctx.longTermGoal$));\n    } }, directives: [i7.WidgetComponent], pipes: [i8.AsyncPipe], styles: [\".page-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  background-color: #ecedff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFDRiIsImZpbGUiOiJwYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNiwgMjM3LCAyNTUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbiJdfQ== */\"], data: { animation: PageAnimations }, changeDetection: 0 });\n"]},"metadata":{},"sourceType":"module"}